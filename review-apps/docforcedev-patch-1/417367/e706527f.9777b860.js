(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{103:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return l}));var a=n(3),r=n(8),i=(n(0),n(110)),c={id:"paystring-schemas",title:"Schemas",sidebar_label:"Schemas"},s={unversionedId:"paystring-schemas",id:"paystring-schemas",isDocsHomePage:!1,title:"Schemas",description:"PayString was previously known as PayID.",source:"@site/docs/paystring-schemas.md",slug:"/paystring-schemas",permalink:"/paystring-documentation/review-apps/docforcedev-patch-1/417367/paystring-schemas",editUrl:"https://github.com/paystring/paystring-documentation/tree/master/docs/paystring-schemas.md",version:"current",sidebar_label:"Schemas",sidebar:"docs",previous:{title:"Interfaces",permalink:"/paystring-documentation/review-apps/docforcedev-patch-1/417367/paystring-interfaces"},next:{title:"Use RippleX Dev Kit With PayString",permalink:"/paystring-documentation/review-apps/docforcedev-patch-1/417367/ripplex-dev-kit-paystring"}},o=[{value:"Example single user schema",id:"example-single-user-schema",children:[]}],p={rightToc:o};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"PayString was previously known as PayID."))),Object(i.b)("p",null,"See also: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://api.paystring.org"}),"PayString API Reference"),"."),Object(i.b)("p",null,"The PayString protocol includes the following schema definitions."),Object(i.b)("p",null,"These schemas are used for request or response payloads for various requests."),Object(i.b)("h3",{id:"example-single-user-schema"},"Example single user schema"),Object(i.b)("p",null,"A single user can have multiple destinations, because the same user can have addresses on different networks for different currencies. This schema is used as a payload with a request to create a user, or as a response to a request to get information about a user."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "payId": "johndoe$xpring.money",\n  "addresses": [\n    {\n      "paymentNetwork": "XRPL",\n      "environment": "TESTNET",\n      "details": {\n        "address": "TVQWr6BhgBLW2jbFyqqufgq8T9eN7KresB684ZSHKQ3oDth"\n      }\n    },\n    {\n      "paymentNetwork": "XRPL",\n      "environment": "MAINNET",\n      "details": {\n        "address": "X7zmKiqEhMznSXgj9cirEnD5sWo3iZSbeFRexSFN1xZ8Ktn"\n      }\n    }\n  ]\n}\n')),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"payId")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"PayString user address")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"addresses")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Object that includes payment address information for one or more payment networks.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"addresses.paymentNetwork")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A payment network, like the bitcoin network, the XRPL, or ACH.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"addresses.environment")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),'"Environment" of the payment network for this payment address. For example, the XPR Ledger has MAINNET, TESTNET, and DEVNET.')),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"address.details")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Actual payment information for this address. Must be in the form ",Object(i.b)("inlineCode",{parentName:"td"},"CryptoAddressDetails")," or ",Object(i.b)("inlineCode",{parentName:"td"},"FiatAddressDetails"),". See ",Object(i.b)("a",Object(a.a)({parentName:"td"},{href:"#interfaces"}),"Interfaces"),".")))))}l.isMDXComponent=!0},110:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),b=l(n),m=a,u=b["".concat(c,".").concat(m)]||b[m]||d[m]||i;return n?r.a.createElement(u,s(s({ref:t},p),{},{components:n})):r.a.createElement(u,s({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var p=2;p<i;p++)c[p]=n[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);